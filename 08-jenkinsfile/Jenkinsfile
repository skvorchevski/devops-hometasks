pipeline {
    agent any
    options {
        timestamps()
    }
    environment {
        GO_VERSION = "go-1.16"
        BRANCH = "master"
        NEXUS_URL = "192.168.33.90:8081"
        NEXUS_REPO_NAME = "wcg-repo"
        NEXUS_CREDS_ID = "nexus-creds"
        STAGING_IP = "192.168.33.80"
        PRODUCTION_IP = "192.168.33.85"
    }
    tools {
        go "$GO_VERSION"
    }
    stages {
        stage('Get Word-Cloud-Generator') {
            steps {
                git branch: "$BRANCH", url: 'https://github.com/wickett/word-cloud-generator.git'
            }
        }
        stage('Check Word-Cloud-Generator') {
            steps {
                sh 'make lint'
                sh 'make test'
            }
        }
        stage('Build and Publish to Nexus') {
            steps {
                sh '''sed -i "s/1.DEVELOPMENT/1.$BUILD_NUMBER/g" static/version
                    GOOS=linux GOARCH=amd64 go build -o ./artifacts/word-cloud-generator -v
                    md5sum artifacts/word-cloud-generator
                    gzip -f artifacts/word-cloud-generator
                    ls -l artifacts/
                '''

                nexusArtifactUploader(
                    nexusVersion: 'nexus3',
                    protocol: 'http',
                    nexusUrl: "$NEXUS_URL",
                    groupId: 'pipeline',
                    version: '1.$BUILD_NUMBER',
                    repository: "$NEXUS_REPO_NAME",
                    credentialsId: "$NEXUS_CREDS_ID",
                    artifacts: [
                        [artifactId: 'word-cloud-generator',
                        classifier: '',
                        file: 'artifacts/word-cloud-generator.gz',
                        type: 'gz']
                    ]
                )
            }
        }

        stage('Deploy to Staging') {
            steps {
                withCredentials([usernamePassword(credentialsId: "$NEXUS_CREDS_ID", usernameVariable: 'NEXUS_USER', passwordVariable: 'NEXUS_PASSWORD')]) {
                    sh '''  ssh vagrant@$STAGING_IP "sudo service wordcloud stop"
                            ssh vagrant@$STAGING_IP "curl -X GET $NEXUS_URL/repository/wcg-repo/pipeline/word-cloud-generator/1.$BUILD_NUMBER/word-cloud-generator-1.$BUILD_NUMBER.gz -o /opt/wordcloud/word-cloud-generator.gz -u $NEXUS_USER:$NEXUS_PASSWORD"
                            ssh vagrant@$STAGING_IP "ls -l /opt/wordcloud"
                            ssh vagrant@$STAGING_IP "gunzip -f /opt/wordcloud/word-cloud-generator.gz"
                            ssh vagrant@$STAGING_IP "chmod +x /opt/wordcloud/word-cloud-generator"
                            ssh vagrant@$STAGING_IP "sudo service wordcloud start"
                    '''
                }
            }
        }

        stage('Testing') {
            parallel {
                stage('Integration test №1') {
                    steps {
                        sh '''"curl -s http://$STAGING_IP:8888/version | jq -r \'.version\'"
							if [ "1.$BUILD_NUMBER" != "$res" ]; then
								exit 99
							fi
							"curl -s -H Content-Type: application/json -d \'{"text":"ths is a really really really important thing this is"}\' http://$STAGING_IP:8888/api | jq \'. | length\'"
							if [ "7" != "$res" ]; then
								exit 99
							fi
                        '''
                    }
                }

                stage('Integration test №2') {
                    steps {
                        sh '''"curl -s http://$STAGING_IP:8888/version | jq -r \'.version\'"
							if [ "1.$BUILD_NUMBER" != "$res" ]; then
								exit 99
							fi
							"curl -s -H Content-Type: application/json -d \'{"text":"ths is a really really really important thing this is"}\' http://$STAGING_IP:8888/api | jq \'. | length\'"
							if [ "7" != "$res" ]; then
								exit 99
							fi
                        '''
                    }
                }
            }
        }

        stage('Deploy to Production') {
            steps {
                withCredentials([usernamePassword(credentialsId: "$NEXUS_CREDS_ID", usernameVariable: 'NEXUS_USER', passwordVariable: 'NEXUS_PASSWORD')]) {
                    sh '''  ssh vagrant@$PRODUCTION_IP "sudo service wordcloud stop"
                            ssh vagrant@$PRODUCTION_IP "curl -X GET $NEXUS_URL/repository/wcg-repo/pipeline/word-cloud-generator/1.$BUILD_NUMBER/word-cloud-generator-1.$BUILD_NUMBER.gz -o /opt/wordcloud/word-cloud-generator.gz -u $NEXUS_USER:$NEXUS_PASSWORD"
                            ssh vagrant@$PRODUCTION_IP "ls -l /opt/wordcloud"
                            ssh vagrant@$PRODUCTION_IP "gunzip -f /opt/wordcloud/word-cloud-generator.gz"
                            ssh vagrant@$PRODUCTION_IP "chmod +x /opt/wordcloud/word-cloud-generator"
                            ssh vagrant@$PRODUCTION_IP "sudo service wordcloud start"
                    '''
                }
            }
        }
    }
}